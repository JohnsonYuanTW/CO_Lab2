$date
	Sun Jul 25 17:04:09 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module TestBench $end
$var wire 1 ! zero $end
$var wire 5 " shamt [4:0] $end
$var wire 32 # sftSrc [31:0] $end
$var wire 32 $ result_Shifter [31:0] $end
$var wire 32 % result_ALU [31:0] $end
$var wire 1 & overflow $end
$var wire 2 ' operation [1:0] $end
$var wire 1 ( leftRight $end
$var wire 1 ) invertB $end
$var wire 1 * invertA $end
$var wire 32 + aluSrc2 [31:0] $end
$var wire 32 , aluSrc1 [31:0] $end
$var reg 34 - ans_ALU [33:0] $end
$var reg 34 . ans_Shifter [33:0] $end
$var reg 1 / clk $end
$var reg 68 0 inp_ALU [67:0] $end
$var reg 68 1 inp_Shifter [67:0] $end
$var integer 32 2 i [31:0] $end
$var integer 32 3 score [31:0] $end
$scope module alu $end
$var wire 32 4 aluSrc1 [31:0] $end
$var wire 32 5 aluSrc2 [31:0] $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 2 6 operation [1:0] $end
$var wire 1 ! zero $end
$var wire 1 7 w2 $end
$var wire 1 8 w1 $end
$var wire 32 9 result [31:0] $end
$var wire 1 & overflow $end
$var wire 32 : carryOut [31:0] $end
$scope module alu0 $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 ) carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 2 = operation [1:0] $end
$var wire 1 > w3 $end
$var wire 1 ? w4 $end
$var wire 1 @ w5 $end
$var wire 1 A w2 $end
$var wire 1 B w1 $end
$var wire 1 C result $end
$var wire 1 8 less $end
$var wire 1 D carryOut $end
$scope module add1 $end
$var wire 1 ) carryIn $end
$var wire 1 D carryOut $end
$var wire 1 B input1 $end
$var wire 1 A input2 $end
$var wire 1 @ sum $end
$var wire 1 E w1 $end
$var wire 1 F w2 $end
$var wire 1 G w3 $end
$upscope $end
$upscope $end
$scope module alu1 $end
$var wire 1 H a $end
$var wire 1 I b $end
$var wire 1 J carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 K less $end
$var wire 2 L operation [1:0] $end
$var wire 1 M w3 $end
$var wire 1 N w4 $end
$var wire 1 O w5 $end
$var wire 1 P w2 $end
$var wire 1 Q w1 $end
$var wire 1 R result $end
$var wire 1 S carryOut $end
$scope module add1 $end
$var wire 1 J carryIn $end
$var wire 1 S carryOut $end
$var wire 1 Q input1 $end
$var wire 1 P input2 $end
$var wire 1 O sum $end
$var wire 1 T w1 $end
$var wire 1 U w2 $end
$var wire 1 V w3 $end
$upscope $end
$upscope $end
$scope module alu10 $end
$var wire 1 W a $end
$var wire 1 X b $end
$var wire 1 Y carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 Z less $end
$var wire 2 [ operation [1:0] $end
$var wire 1 \ w3 $end
$var wire 1 ] w4 $end
$var wire 1 ^ w5 $end
$var wire 1 _ w2 $end
$var wire 1 ` w1 $end
$var wire 1 a result $end
$var wire 1 b carryOut $end
$scope module add1 $end
$var wire 1 Y carryIn $end
$var wire 1 b carryOut $end
$var wire 1 ` input1 $end
$var wire 1 _ input2 $end
$var wire 1 ^ sum $end
$var wire 1 c w1 $end
$var wire 1 d w2 $end
$var wire 1 e w3 $end
$upscope $end
$upscope $end
$scope module alu11 $end
$var wire 1 f a $end
$var wire 1 g b $end
$var wire 1 h carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 i less $end
$var wire 2 j operation [1:0] $end
$var wire 1 k w3 $end
$var wire 1 l w4 $end
$var wire 1 m w5 $end
$var wire 1 n w2 $end
$var wire 1 o w1 $end
$var wire 1 p result $end
$var wire 1 q carryOut $end
$scope module add1 $end
$var wire 1 h carryIn $end
$var wire 1 q carryOut $end
$var wire 1 o input1 $end
$var wire 1 n input2 $end
$var wire 1 m sum $end
$var wire 1 r w1 $end
$var wire 1 s w2 $end
$var wire 1 t w3 $end
$upscope $end
$upscope $end
$scope module alu12 $end
$var wire 1 u a $end
$var wire 1 v b $end
$var wire 1 w carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 x less $end
$var wire 2 y operation [1:0] $end
$var wire 1 z w3 $end
$var wire 1 { w4 $end
$var wire 1 | w5 $end
$var wire 1 } w2 $end
$var wire 1 ~ w1 $end
$var wire 1 !" result $end
$var wire 1 "" carryOut $end
$scope module add1 $end
$var wire 1 w carryIn $end
$var wire 1 "" carryOut $end
$var wire 1 ~ input1 $end
$var wire 1 } input2 $end
$var wire 1 | sum $end
$var wire 1 #" w1 $end
$var wire 1 $" w2 $end
$var wire 1 %" w3 $end
$upscope $end
$upscope $end
$scope module alu13 $end
$var wire 1 &" a $end
$var wire 1 '" b $end
$var wire 1 (" carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 )" less $end
$var wire 2 *" operation [1:0] $end
$var wire 1 +" w3 $end
$var wire 1 ," w4 $end
$var wire 1 -" w5 $end
$var wire 1 ." w2 $end
$var wire 1 /" w1 $end
$var wire 1 0" result $end
$var wire 1 1" carryOut $end
$scope module add1 $end
$var wire 1 (" carryIn $end
$var wire 1 1" carryOut $end
$var wire 1 /" input1 $end
$var wire 1 ." input2 $end
$var wire 1 -" sum $end
$var wire 1 2" w1 $end
$var wire 1 3" w2 $end
$var wire 1 4" w3 $end
$upscope $end
$upscope $end
$scope module alu14 $end
$var wire 1 5" a $end
$var wire 1 6" b $end
$var wire 1 7" carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 8" less $end
$var wire 2 9" operation [1:0] $end
$var wire 1 :" w3 $end
$var wire 1 ;" w4 $end
$var wire 1 <" w5 $end
$var wire 1 =" w2 $end
$var wire 1 >" w1 $end
$var wire 1 ?" result $end
$var wire 1 @" carryOut $end
$scope module add1 $end
$var wire 1 7" carryIn $end
$var wire 1 @" carryOut $end
$var wire 1 >" input1 $end
$var wire 1 =" input2 $end
$var wire 1 <" sum $end
$var wire 1 A" w1 $end
$var wire 1 B" w2 $end
$var wire 1 C" w3 $end
$upscope $end
$upscope $end
$scope module alu15 $end
$var wire 1 D" a $end
$var wire 1 E" b $end
$var wire 1 F" carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 G" less $end
$var wire 2 H" operation [1:0] $end
$var wire 1 I" w3 $end
$var wire 1 J" w4 $end
$var wire 1 K" w5 $end
$var wire 1 L" w2 $end
$var wire 1 M" w1 $end
$var wire 1 N" result $end
$var wire 1 O" carryOut $end
$scope module add1 $end
$var wire 1 F" carryIn $end
$var wire 1 O" carryOut $end
$var wire 1 M" input1 $end
$var wire 1 L" input2 $end
$var wire 1 K" sum $end
$var wire 1 P" w1 $end
$var wire 1 Q" w2 $end
$var wire 1 R" w3 $end
$upscope $end
$upscope $end
$scope module alu16 $end
$var wire 1 S" a $end
$var wire 1 T" b $end
$var wire 1 U" carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 V" less $end
$var wire 2 W" operation [1:0] $end
$var wire 1 X" w3 $end
$var wire 1 Y" w4 $end
$var wire 1 Z" w5 $end
$var wire 1 [" w2 $end
$var wire 1 \" w1 $end
$var wire 1 ]" result $end
$var wire 1 ^" carryOut $end
$scope module add1 $end
$var wire 1 U" carryIn $end
$var wire 1 ^" carryOut $end
$var wire 1 \" input1 $end
$var wire 1 [" input2 $end
$var wire 1 Z" sum $end
$var wire 1 _" w1 $end
$var wire 1 `" w2 $end
$var wire 1 a" w3 $end
$upscope $end
$upscope $end
$scope module alu17 $end
$var wire 1 b" a $end
$var wire 1 c" b $end
$var wire 1 d" carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 e" less $end
$var wire 2 f" operation [1:0] $end
$var wire 1 g" w3 $end
$var wire 1 h" w4 $end
$var wire 1 i" w5 $end
$var wire 1 j" w2 $end
$var wire 1 k" w1 $end
$var wire 1 l" result $end
$var wire 1 m" carryOut $end
$scope module add1 $end
$var wire 1 d" carryIn $end
$var wire 1 m" carryOut $end
$var wire 1 k" input1 $end
$var wire 1 j" input2 $end
$var wire 1 i" sum $end
$var wire 1 n" w1 $end
$var wire 1 o" w2 $end
$var wire 1 p" w3 $end
$upscope $end
$upscope $end
$scope module alu18 $end
$var wire 1 q" a $end
$var wire 1 r" b $end
$var wire 1 s" carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 t" less $end
$var wire 2 u" operation [1:0] $end
$var wire 1 v" w3 $end
$var wire 1 w" w4 $end
$var wire 1 x" w5 $end
$var wire 1 y" w2 $end
$var wire 1 z" w1 $end
$var wire 1 {" result $end
$var wire 1 |" carryOut $end
$scope module add1 $end
$var wire 1 s" carryIn $end
$var wire 1 |" carryOut $end
$var wire 1 z" input1 $end
$var wire 1 y" input2 $end
$var wire 1 x" sum $end
$var wire 1 }" w1 $end
$var wire 1 ~" w2 $end
$var wire 1 !# w3 $end
$upscope $end
$upscope $end
$scope module alu19 $end
$var wire 1 "# a $end
$var wire 1 ## b $end
$var wire 1 $# carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 %# less $end
$var wire 2 &# operation [1:0] $end
$var wire 1 '# w3 $end
$var wire 1 (# w4 $end
$var wire 1 )# w5 $end
$var wire 1 *# w2 $end
$var wire 1 +# w1 $end
$var wire 1 ,# result $end
$var wire 1 -# carryOut $end
$scope module add1 $end
$var wire 1 $# carryIn $end
$var wire 1 -# carryOut $end
$var wire 1 +# input1 $end
$var wire 1 *# input2 $end
$var wire 1 )# sum $end
$var wire 1 .# w1 $end
$var wire 1 /# w2 $end
$var wire 1 0# w3 $end
$upscope $end
$upscope $end
$scope module alu2 $end
$var wire 1 1# a $end
$var wire 1 2# b $end
$var wire 1 3# carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 4# less $end
$var wire 2 5# operation [1:0] $end
$var wire 1 6# w3 $end
$var wire 1 7# w4 $end
$var wire 1 8# w5 $end
$var wire 1 9# w2 $end
$var wire 1 :# w1 $end
$var wire 1 ;# result $end
$var wire 1 <# carryOut $end
$scope module add1 $end
$var wire 1 3# carryIn $end
$var wire 1 <# carryOut $end
$var wire 1 :# input1 $end
$var wire 1 9# input2 $end
$var wire 1 8# sum $end
$var wire 1 =# w1 $end
$var wire 1 ># w2 $end
$var wire 1 ?# w3 $end
$upscope $end
$upscope $end
$scope module alu20 $end
$var wire 1 @# a $end
$var wire 1 A# b $end
$var wire 1 B# carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 C# less $end
$var wire 2 D# operation [1:0] $end
$var wire 1 E# w3 $end
$var wire 1 F# w4 $end
$var wire 1 G# w5 $end
$var wire 1 H# w2 $end
$var wire 1 I# w1 $end
$var wire 1 J# result $end
$var wire 1 K# carryOut $end
$scope module add1 $end
$var wire 1 B# carryIn $end
$var wire 1 K# carryOut $end
$var wire 1 I# input1 $end
$var wire 1 H# input2 $end
$var wire 1 G# sum $end
$var wire 1 L# w1 $end
$var wire 1 M# w2 $end
$var wire 1 N# w3 $end
$upscope $end
$upscope $end
$scope module alu21 $end
$var wire 1 O# a $end
$var wire 1 P# b $end
$var wire 1 Q# carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 R# less $end
$var wire 2 S# operation [1:0] $end
$var wire 1 T# w3 $end
$var wire 1 U# w4 $end
$var wire 1 V# w5 $end
$var wire 1 W# w2 $end
$var wire 1 X# w1 $end
$var wire 1 Y# result $end
$var wire 1 Z# carryOut $end
$scope module add1 $end
$var wire 1 Q# carryIn $end
$var wire 1 Z# carryOut $end
$var wire 1 X# input1 $end
$var wire 1 W# input2 $end
$var wire 1 V# sum $end
$var wire 1 [# w1 $end
$var wire 1 \# w2 $end
$var wire 1 ]# w3 $end
$upscope $end
$upscope $end
$scope module alu22 $end
$var wire 1 ^# a $end
$var wire 1 _# b $end
$var wire 1 `# carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 a# less $end
$var wire 2 b# operation [1:0] $end
$var wire 1 c# w3 $end
$var wire 1 d# w4 $end
$var wire 1 e# w5 $end
$var wire 1 f# w2 $end
$var wire 1 g# w1 $end
$var wire 1 h# result $end
$var wire 1 i# carryOut $end
$scope module add1 $end
$var wire 1 `# carryIn $end
$var wire 1 i# carryOut $end
$var wire 1 g# input1 $end
$var wire 1 f# input2 $end
$var wire 1 e# sum $end
$var wire 1 j# w1 $end
$var wire 1 k# w2 $end
$var wire 1 l# w3 $end
$upscope $end
$upscope $end
$scope module alu23 $end
$var wire 1 m# a $end
$var wire 1 n# b $end
$var wire 1 o# carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 p# less $end
$var wire 2 q# operation [1:0] $end
$var wire 1 r# w3 $end
$var wire 1 s# w4 $end
$var wire 1 t# w5 $end
$var wire 1 u# w2 $end
$var wire 1 v# w1 $end
$var wire 1 w# result $end
$var wire 1 x# carryOut $end
$scope module add1 $end
$var wire 1 o# carryIn $end
$var wire 1 x# carryOut $end
$var wire 1 v# input1 $end
$var wire 1 u# input2 $end
$var wire 1 t# sum $end
$var wire 1 y# w1 $end
$var wire 1 z# w2 $end
$var wire 1 {# w3 $end
$upscope $end
$upscope $end
$scope module alu24 $end
$var wire 1 |# a $end
$var wire 1 }# b $end
$var wire 1 ~# carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 !$ less $end
$var wire 2 "$ operation [1:0] $end
$var wire 1 #$ w3 $end
$var wire 1 $$ w4 $end
$var wire 1 %$ w5 $end
$var wire 1 &$ w2 $end
$var wire 1 '$ w1 $end
$var wire 1 ($ result $end
$var wire 1 )$ carryOut $end
$scope module add1 $end
$var wire 1 ~# carryIn $end
$var wire 1 )$ carryOut $end
$var wire 1 '$ input1 $end
$var wire 1 &$ input2 $end
$var wire 1 %$ sum $end
$var wire 1 *$ w1 $end
$var wire 1 +$ w2 $end
$var wire 1 ,$ w3 $end
$upscope $end
$upscope $end
$scope module alu25 $end
$var wire 1 -$ a $end
$var wire 1 .$ b $end
$var wire 1 /$ carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 0$ less $end
$var wire 2 1$ operation [1:0] $end
$var wire 1 2$ w3 $end
$var wire 1 3$ w4 $end
$var wire 1 4$ w5 $end
$var wire 1 5$ w2 $end
$var wire 1 6$ w1 $end
$var wire 1 7$ result $end
$var wire 1 8$ carryOut $end
$scope module add1 $end
$var wire 1 /$ carryIn $end
$var wire 1 8$ carryOut $end
$var wire 1 6$ input1 $end
$var wire 1 5$ input2 $end
$var wire 1 4$ sum $end
$var wire 1 9$ w1 $end
$var wire 1 :$ w2 $end
$var wire 1 ;$ w3 $end
$upscope $end
$upscope $end
$scope module alu26 $end
$var wire 1 <$ a $end
$var wire 1 =$ b $end
$var wire 1 >$ carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 ?$ less $end
$var wire 2 @$ operation [1:0] $end
$var wire 1 A$ w3 $end
$var wire 1 B$ w4 $end
$var wire 1 C$ w5 $end
$var wire 1 D$ w2 $end
$var wire 1 E$ w1 $end
$var wire 1 F$ result $end
$var wire 1 G$ carryOut $end
$scope module add1 $end
$var wire 1 >$ carryIn $end
$var wire 1 G$ carryOut $end
$var wire 1 E$ input1 $end
$var wire 1 D$ input2 $end
$var wire 1 C$ sum $end
$var wire 1 H$ w1 $end
$var wire 1 I$ w2 $end
$var wire 1 J$ w3 $end
$upscope $end
$upscope $end
$scope module alu27 $end
$var wire 1 K$ a $end
$var wire 1 L$ b $end
$var wire 1 M$ carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 N$ less $end
$var wire 2 O$ operation [1:0] $end
$var wire 1 P$ w3 $end
$var wire 1 Q$ w4 $end
$var wire 1 R$ w5 $end
$var wire 1 S$ w2 $end
$var wire 1 T$ w1 $end
$var wire 1 U$ result $end
$var wire 1 V$ carryOut $end
$scope module add1 $end
$var wire 1 M$ carryIn $end
$var wire 1 V$ carryOut $end
$var wire 1 T$ input1 $end
$var wire 1 S$ input2 $end
$var wire 1 R$ sum $end
$var wire 1 W$ w1 $end
$var wire 1 X$ w2 $end
$var wire 1 Y$ w3 $end
$upscope $end
$upscope $end
$scope module alu28 $end
$var wire 1 Z$ a $end
$var wire 1 [$ b $end
$var wire 1 \$ carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 ]$ less $end
$var wire 2 ^$ operation [1:0] $end
$var wire 1 _$ w3 $end
$var wire 1 `$ w4 $end
$var wire 1 a$ w5 $end
$var wire 1 b$ w2 $end
$var wire 1 c$ w1 $end
$var wire 1 d$ result $end
$var wire 1 e$ carryOut $end
$scope module add1 $end
$var wire 1 \$ carryIn $end
$var wire 1 e$ carryOut $end
$var wire 1 c$ input1 $end
$var wire 1 b$ input2 $end
$var wire 1 a$ sum $end
$var wire 1 f$ w1 $end
$var wire 1 g$ w2 $end
$var wire 1 h$ w3 $end
$upscope $end
$upscope $end
$scope module alu29 $end
$var wire 1 i$ a $end
$var wire 1 j$ b $end
$var wire 1 k$ carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 l$ less $end
$var wire 2 m$ operation [1:0] $end
$var wire 1 n$ w3 $end
$var wire 1 o$ w4 $end
$var wire 1 p$ w5 $end
$var wire 1 q$ w2 $end
$var wire 1 r$ w1 $end
$var wire 1 s$ result $end
$var wire 1 t$ carryOut $end
$scope module add1 $end
$var wire 1 k$ carryIn $end
$var wire 1 t$ carryOut $end
$var wire 1 r$ input1 $end
$var wire 1 q$ input2 $end
$var wire 1 p$ sum $end
$var wire 1 u$ w1 $end
$var wire 1 v$ w2 $end
$var wire 1 w$ w3 $end
$upscope $end
$upscope $end
$scope module alu3 $end
$var wire 1 x$ a $end
$var wire 1 y$ b $end
$var wire 1 z$ carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 {$ less $end
$var wire 2 |$ operation [1:0] $end
$var wire 1 }$ w3 $end
$var wire 1 ~$ w4 $end
$var wire 1 !% w5 $end
$var wire 1 "% w2 $end
$var wire 1 #% w1 $end
$var wire 1 $% result $end
$var wire 1 %% carryOut $end
$scope module add1 $end
$var wire 1 z$ carryIn $end
$var wire 1 %% carryOut $end
$var wire 1 #% input1 $end
$var wire 1 "% input2 $end
$var wire 1 !% sum $end
$var wire 1 &% w1 $end
$var wire 1 '% w2 $end
$var wire 1 (% w3 $end
$upscope $end
$upscope $end
$scope module alu30 $end
$var wire 1 )% a $end
$var wire 1 *% b $end
$var wire 1 +% carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 ,% less $end
$var wire 2 -% operation [1:0] $end
$var wire 1 .% w3 $end
$var wire 1 /% w4 $end
$var wire 1 0% w5 $end
$var wire 1 1% w2 $end
$var wire 1 2% w1 $end
$var wire 1 3% result $end
$var wire 1 4% carryOut $end
$scope module add1 $end
$var wire 1 +% carryIn $end
$var wire 1 4% carryOut $end
$var wire 1 2% input1 $end
$var wire 1 1% input2 $end
$var wire 1 0% sum $end
$var wire 1 5% w1 $end
$var wire 1 6% w2 $end
$var wire 1 7% w3 $end
$upscope $end
$upscope $end
$scope module alu31 $end
$var wire 1 8% a $end
$var wire 1 9% b $end
$var wire 1 :% carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 ;% less $end
$var wire 2 <% operation [1:0] $end
$var wire 1 =% w3 $end
$var wire 1 >% w4 $end
$var wire 1 ?% w5 $end
$var wire 1 @% w2 $end
$var wire 1 A% w1 $end
$var wire 1 B% result $end
$var wire 1 C% carryOut $end
$scope module add1 $end
$var wire 1 :% carryIn $end
$var wire 1 C% carryOut $end
$var wire 1 A% input1 $end
$var wire 1 @% input2 $end
$var wire 1 ?% sum $end
$var wire 1 D% w1 $end
$var wire 1 E% w2 $end
$var wire 1 F% w3 $end
$upscope $end
$upscope $end
$scope module alu31_set $end
$var wire 1 G% a $end
$var wire 1 H% b $end
$var wire 1 I% carryIn $end
$var wire 1 J% invertA $end
$var wire 1 K% invertB $end
$var wire 1 L% less $end
$var wire 2 M% operation [1:0] $end
$var wire 1 N% w1 $end
$var wire 1 O% w2 $end
$var wire 1 P% w3 $end
$var wire 1 Q% w4 $end
$var wire 1 R% w5 $end
$var wire 1 8 result $end
$var wire 1 7 carryOut $end
$scope module add1 $end
$var wire 1 I% carryIn $end
$var wire 1 7 carryOut $end
$var wire 1 N% input1 $end
$var wire 1 O% input2 $end
$var wire 1 R% sum $end
$var wire 1 S% w1 $end
$var wire 1 T% w2 $end
$var wire 1 U% w3 $end
$upscope $end
$upscope $end
$scope module alu4 $end
$var wire 1 V% a $end
$var wire 1 W% b $end
$var wire 1 X% carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 Y% less $end
$var wire 2 Z% operation [1:0] $end
$var wire 1 [% w3 $end
$var wire 1 \% w4 $end
$var wire 1 ]% w5 $end
$var wire 1 ^% w2 $end
$var wire 1 _% w1 $end
$var wire 1 `% result $end
$var wire 1 a% carryOut $end
$scope module add1 $end
$var wire 1 X% carryIn $end
$var wire 1 a% carryOut $end
$var wire 1 _% input1 $end
$var wire 1 ^% input2 $end
$var wire 1 ]% sum $end
$var wire 1 b% w1 $end
$var wire 1 c% w2 $end
$var wire 1 d% w3 $end
$upscope $end
$upscope $end
$scope module alu5 $end
$var wire 1 e% a $end
$var wire 1 f% b $end
$var wire 1 g% carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 h% less $end
$var wire 2 i% operation [1:0] $end
$var wire 1 j% w3 $end
$var wire 1 k% w4 $end
$var wire 1 l% w5 $end
$var wire 1 m% w2 $end
$var wire 1 n% w1 $end
$var wire 1 o% result $end
$var wire 1 p% carryOut $end
$scope module add1 $end
$var wire 1 g% carryIn $end
$var wire 1 p% carryOut $end
$var wire 1 n% input1 $end
$var wire 1 m% input2 $end
$var wire 1 l% sum $end
$var wire 1 q% w1 $end
$var wire 1 r% w2 $end
$var wire 1 s% w3 $end
$upscope $end
$upscope $end
$scope module alu6 $end
$var wire 1 t% a $end
$var wire 1 u% b $end
$var wire 1 v% carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 w% less $end
$var wire 2 x% operation [1:0] $end
$var wire 1 y% w3 $end
$var wire 1 z% w4 $end
$var wire 1 {% w5 $end
$var wire 1 |% w2 $end
$var wire 1 }% w1 $end
$var wire 1 ~% result $end
$var wire 1 !& carryOut $end
$scope module add1 $end
$var wire 1 v% carryIn $end
$var wire 1 !& carryOut $end
$var wire 1 }% input1 $end
$var wire 1 |% input2 $end
$var wire 1 {% sum $end
$var wire 1 "& w1 $end
$var wire 1 #& w2 $end
$var wire 1 $& w3 $end
$upscope $end
$upscope $end
$scope module alu7 $end
$var wire 1 %& a $end
$var wire 1 && b $end
$var wire 1 '& carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 (& less $end
$var wire 2 )& operation [1:0] $end
$var wire 1 *& w3 $end
$var wire 1 +& w4 $end
$var wire 1 ,& w5 $end
$var wire 1 -& w2 $end
$var wire 1 .& w1 $end
$var wire 1 /& result $end
$var wire 1 0& carryOut $end
$scope module add1 $end
$var wire 1 '& carryIn $end
$var wire 1 0& carryOut $end
$var wire 1 .& input1 $end
$var wire 1 -& input2 $end
$var wire 1 ,& sum $end
$var wire 1 1& w1 $end
$var wire 1 2& w2 $end
$var wire 1 3& w3 $end
$upscope $end
$upscope $end
$scope module alu8 $end
$var wire 1 4& a $end
$var wire 1 5& b $end
$var wire 1 6& carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 7& less $end
$var wire 2 8& operation [1:0] $end
$var wire 1 9& w3 $end
$var wire 1 :& w4 $end
$var wire 1 ;& w5 $end
$var wire 1 <& w2 $end
$var wire 1 =& w1 $end
$var wire 1 >& result $end
$var wire 1 ?& carryOut $end
$scope module add1 $end
$var wire 1 6& carryIn $end
$var wire 1 ?& carryOut $end
$var wire 1 =& input1 $end
$var wire 1 <& input2 $end
$var wire 1 ;& sum $end
$var wire 1 @& w1 $end
$var wire 1 A& w2 $end
$var wire 1 B& w3 $end
$upscope $end
$upscope $end
$scope module alu9 $end
$var wire 1 C& a $end
$var wire 1 D& b $end
$var wire 1 E& carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 F& less $end
$var wire 2 G& operation [1:0] $end
$var wire 1 H& w3 $end
$var wire 1 I& w4 $end
$var wire 1 J& w5 $end
$var wire 1 K& w2 $end
$var wire 1 L& w1 $end
$var wire 1 M& result $end
$var wire 1 N& carryOut $end
$scope module add1 $end
$var wire 1 E& carryIn $end
$var wire 1 N& carryOut $end
$var wire 1 L& input1 $end
$var wire 1 K& input2 $end
$var wire 1 J& sum $end
$var wire 1 O& w1 $end
$var wire 1 P& w2 $end
$var wire 1 Q& w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope module shifter $end
$var wire 1 ( leftRight $end
$var wire 32 R& sftSrc [31:0] $end
$var wire 5 S& shamt [4:0] $end
$var wire 32 T& result [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx T&
bx S&
bx R&
xQ&
xP&
xO&
xN&
xM&
xL&
xK&
xJ&
xI&
xH&
bx G&
0F&
xE&
xD&
xC&
xB&
xA&
x@&
x?&
x>&
x=&
x<&
x;&
x:&
x9&
bx 8&
07&
x6&
x5&
x4&
x3&
x2&
x1&
x0&
x/&
x.&
x-&
x,&
x+&
x*&
bx )&
0(&
x'&
x&&
x%&
x$&
x#&
x"&
x!&
x~%
x}%
x|%
x{%
xz%
xy%
bx x%
0w%
xv%
xu%
xt%
xs%
xr%
xq%
xp%
xo%
xn%
xm%
xl%
xk%
xj%
bx i%
0h%
xg%
xf%
xe%
xd%
xc%
xb%
xa%
x`%
x_%
x^%
x]%
x\%
x[%
bx Z%
0Y%
xX%
xW%
xV%
xU%
xT%
xS%
xR%
xQ%
xP%
xO%
xN%
b10 M%
0L%
1K%
0J%
xI%
xH%
xG%
xF%
xE%
xD%
xC%
xB%
xA%
x@%
x?%
x>%
x=%
bx <%
0;%
x:%
x9%
x8%
x7%
x6%
x5%
x4%
x3%
x2%
x1%
x0%
x/%
x.%
bx -%
0,%
x+%
x*%
x)%
x(%
x'%
x&%
x%%
x$%
x#%
x"%
x!%
x~$
x}$
bx |$
0{$
xz$
xy$
xx$
xw$
xv$
xu$
xt$
xs$
xr$
xq$
xp$
xo$
xn$
bx m$
0l$
xk$
xj$
xi$
xh$
xg$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
x_$
bx ^$
0]$
x\$
x[$
xZ$
xY$
xX$
xW$
xV$
xU$
xT$
xS$
xR$
xQ$
xP$
bx O$
0N$
xM$
xL$
xK$
xJ$
xI$
xH$
xG$
xF$
xE$
xD$
xC$
xB$
xA$
bx @$
0?$
x>$
x=$
x<$
x;$
x:$
x9$
x8$
x7$
x6$
x5$
x4$
x3$
x2$
bx 1$
00$
x/$
x.$
x-$
x,$
x+$
x*$
x)$
x($
x'$
x&$
x%$
x$$
x#$
bx "$
0!$
x~#
x}#
x|#
x{#
xz#
xy#
xx#
xw#
xv#
xu#
xt#
xs#
xr#
bx q#
0p#
xo#
xn#
xm#
xl#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
bx b#
0a#
x`#
x_#
x^#
x]#
x\#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
xT#
bx S#
0R#
xQ#
xP#
xO#
xN#
xM#
xL#
xK#
xJ#
xI#
xH#
xG#
xF#
xE#
bx D#
0C#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
x:#
x9#
x8#
x7#
x6#
bx 5#
04#
x3#
x2#
x1#
x0#
x/#
x.#
x-#
x,#
x+#
x*#
x)#
x(#
x'#
bx &#
0%#
x$#
x##
x"#
x!#
x~"
x}"
x|"
x{"
xz"
xy"
xx"
xw"
xv"
bx u"
0t"
xs"
xr"
xq"
xp"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
bx f"
0e"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
bx W"
0V"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
bx H"
0G"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
bx 9"
08"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
bx *"
0)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~
x}
x|
x{
xz
bx y
0x
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
bx j
0i
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
bx [
0Z
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
bx L
0K
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
bx =
x<
x;
bx :
bx 9
x8
x7
bx 6
bx 5
bx 4
b0 3
b0 2
bx 1
bx 0
0/
bx .
bx -
bx ,
bx +
x*
x)
x(
bx '
x&
bx %
bx $
bx #
bx "
x!
$end
#5000
1/
#10000
0;#
08#
0!
0`%
0o%
0~%
0/&
0>&
0M&
0a
0p
0!"
00"
0?"
0N"
0]"
0l"
0{"
0,#
0J#
0Y#
0h#
0w#
0($
07$
0F$
0U$
0d$
0s$
03%
0B%
18
1R
03#
1$%
07
0S
0]%
0l%
0{%
0,&
0;&
0J&
0^
0m
0|
0-"
0<"
0K"
0Z"
0i"
0x"
0)#
0G#
0V#
0e#
0t#
0%$
04$
0C$
0R$
0a$
0p$
00%
0?%
1R%
0U%
b1010 %
b1010 9
0C
1O
0V
1!%
0X%
0g%
0v%
0'&
06&
0E&
0Y
0h
0w
0("
07"
0F"
0U"
0d"
0s"
0$#
0B#
0Q#
0`#
0o#
0~#
0/$
0>$
0M$
0\$
0k$
0+%
0:%
0I%
0&
0J
1z$
0%%
0a%
0p%
0!&
00&
0?&
0N&
0b
0q
0""
01"
0@"
0O"
0^"
0m"
0|"
0-#
0K#
0Z#
0i#
0x#
0)$
08$
0G$
0V$
0e$
0t$
04%
0C%
0@
0D
0?#
b100 :
1<#
0(%
0d%
0s%
0$&
03&
0B&
0Q&
0e
0t
0%"
04"
0C"
0R"
0a"
0p"
0!#
00#
0N#
0]#
0l#
0{#
0,$
0;$
0J$
0Y$
0h$
0w$
07%
0F%
0E
0F
0?
0>
1T
0U
0N
1M
0=#
1>#
17#
16#
0&%
0'%
0~$
0}$
0b%
0c%
0\%
0[%
0q%
0r%
0k%
0j%
0"&
0#&
0z%
0y%
01&
02&
0+&
0*&
0@&
0A&
0:&
09&
0O&
0P&
0I&
0H&
0c
0d
0]
0\
0r
0s
0l
0k
0#"
0$"
0{
0z
02"
03"
0,"
0+"
0A"
0B"
0;"
0:"
0P"
0Q"
0J"
0I"
0_"
0`"
0Y"
0X"
0n"
0o"
0h"
0g"
0}"
0~"
0w"
0v"
0.#
0/#
0(#
0'#
0L#
0M#
0F#
0E#
0[#
0\#
0U#
0T#
0j#
0k#
0d#
0c#
0y#
0z#
0s#
0r#
0*$
0+$
0$$
0#$
09$
0:$
03$
02$
0H$
0I$
0B$
0A$
0W$
0X$
0Q$
0P$
0f$
0g$
0`$
0_$
0u$
0v$
0o$
0n$
05%
06%
0/%
0.%
0D%
0E%
0>%
0=%
0B
1Q
0A
0P
1:#
19#
0#%
0"%
0_%
0^%
0n%
0m%
0}%
0|%
0.&
0-&
0=&
0<&
0L&
0K&
0`
0_
0o
0n
0~
0}
0/"
0."
0>"
0="
0M"
0L"
0\"
0["
0k"
0j"
0z"
0y"
0+#
0*#
0I#
0H#
0X#
0W#
0g#
0f#
0v#
0u#
0'$
0&$
06$
05$
0E$
0D$
0T$
0S$
0c$
0b$
0r$
0q$
02%
01%
0A%
0@%
1S%
0T%
0Q%
1P%
1O%
b110 $
b110 T&
0;
1H
0<
0I
11#
12#
0x$
0y$
0V%
0W%
0e%
0f%
0t%
0u%
0%&
0&&
04&
05&
0C&
0D&
0W
0X
0f
0g
0u
0v
0&"
0'"
05"
06"
0D"
0E"
0S"
0T"
0b"
0c"
0q"
0r"
0"#
0##
0@#
0A#
0O#
0P#
0^#
0_#
0m#
0n#
0|#
0}#
0-$
0.$
0<$
0=$
0K$
0L$
0Z$
0[$
0i$
0j$
0)%
0*%
08%
09%
0N%
0G%
0H%
0G
1(
b1 "
b1 S&
b11 #
b11 R&
b10 ,
b10 4
b100 +
b100 5
0*
0)
b10 '
b10 6
b10 =
b10 L
b10 [
b10 j
b10 y
b10 *"
b10 9"
b10 H"
b10 W"
b10 f"
b10 u"
b10 &#
b10 5#
b10 D#
b10 S#
b10 b#
b10 q#
b10 "$
b10 1$
b10 @$
b10 O$
b10 ^$
b10 m$
b10 |$
b10 -%
b10 <%
b10 Z%
b10 i%
b10 x%
b10 )&
b10 8&
b10 G&
b1 2
b10000100000000000000000000000000000011 1
b110 .
b100000000000000000000000000000001000000000000000000000000000000100 0
b110 -
0/
#12000
b1 3
#15000
1/
#20000
1;#
0$%
1C
b101 %
b101 9
0R
18#
0!%
13#
0z$
1@
0O
1S
b10 :
0<#
1E
1>
0T
1U
1N
0>#
07#
06#
1A
1P
0:#
09#
b1 $
b1 T&
1<
1I
01#
02#
0(
b11 +
b11 5
b10 2
b100000000000000000000000000000011 1
b1 .
b100000000000000000000000000000001000000000000000000000000000000011 0
b101 -
0/
#21000
b10 3
#22000
b11 3
#25000
1/
#30000
08#
1!%
03#
1z$
0@
1O
0S
b100 :
1<#
0E
0>
1T
0U
0N
1>#
17#
16#
0A
0P
1:#
19#
0C
0R
b100 %
b100 9
1;#
b10 $
b10 T&
0<
0I
11#
12#
1(
b1 #
b1 R&
b100 +
b100 5
b1 '
b1 6
b1 =
b1 L
b1 [
b1 j
b1 y
b1 *"
b1 9"
b1 H"
b1 W"
b1 f"
b1 u"
b1 &#
b1 5#
b1 D#
b1 S#
b1 b#
b1 q#
b1 "$
b1 1$
b1 @$
b1 O$
b1 ^$
b1 m$
b1 |$
b1 -%
b1 <%
b1 Z%
b1 i%
b1 x%
b1 )&
b1 8&
b1 G&
b11 2
b10000100000000000000000000000000000001 1
b10 .
b10000000000000000000000000000001000000000000000000000000000000100 0
b100000000000000000000000000000000 -
0/
#32000
b100 3
#35000
1/
#40000
18#
13#
b110 %
b110 9
1R
1@
0O
b110 :
1S
1E
1>
0T
1U
1N
1A
1P
b1000000000000000000000000000000 $
b1000000000000000000000000000000 T&
1<
1I
0(
b10000000000000000000000000000000 #
b10000000000000000000000000000000 R&
b111 +
b111 5
b100 2
b110000000000000000000000000000000 1
b1000000000000000000000000000000 .
b10000000000000000000000000000001000000000000000000000000000000111 0
b10 -
0/
#42000
b101 3
#45000
1/
#50000
x8
xt
x%"
x4"
xC"
xR"
xa"
xp"
x!#
x0#
xN#
x]#
xl#
x{#
x,$
x;$
xJ$
xY$
xh$
xw$
x7%
xd%
xF%
xU%
xs%
x$&
x3&
xB&
xQ&
xe
xV
x3#
xh
xa
xw
xp
x("
x!"
x7"
x0"
xF"
x?"
xU"
xN"
xd"
x]"
xs"
xl"
x$#
x{"
xB#
x,#
xz$
xQ#
xJ#
x`#
xY#
xo#
xh#
x~#
xw#
x/$
x($
x>$
x7$
xM$
xF$
x\$
xU$
xk$
xd$
x+%
xs$
xX%
x:%
xI%
x3%
x&
xB%
xg%
x`%
xv%
xo%
x'&
x~%
x6&
x/&
xE&
x>&
xY
xM&
xR%
x7
xJ
xO
xS
x^
xb
xm
xq
x|
x""
x-"
x1"
x<"
x@"
xK"
xO"
xZ"
x^"
xi"
xm"
xx"
x|"
x)#
x-#
x8#
x?#
x<#
xG#
xK#
xV#
xZ#
xe#
xi#
xt#
xx#
x%$
x)$
x4$
x8$
xC$
xG$
xR$
xV$
xa$
xe$
xp$
xt$
x!%
x(%
x%%
x0%
x4%
x?%
xC%
x]%
xa%
xl%
xp%
x{%
x!&
x,&
x0&
x;&
x?&
xJ&
xN&
x!
xS%
xT%
xQ%
xP%
xO%
xE
xF
x?
x>
bx :
xD
xT
xU
xN
xM
xc
xd
x]
x\
xr
xs
xl
xk
x#"
x$"
x{
xz
x2"
x3"
x,"
x+"
xA"
xB"
x;"
x:"
xP"
xQ"
xJ"
xI"
x_"
x`"
xY"
xX"
xn"
xo"
xh"
xg"
x}"
x~"
xw"
xv"
x.#
x/#
x(#
x'#
x=#
x>#
x7#
x6#
xL#
xM#
xF#
xE#
x[#
x\#
xU#
xT#
xj#
xk#
xd#
xc#
xy#
xz#
xs#
xr#
x*$
x+$
x$$
x#$
x9$
x:$
x3$
x2$
xH$
xI$
xB$
xA$
xW$
xX$
xQ$
xP$
xf$
xg$
x`$
x_$
xu$
xv$
xo$
xn$
x&%
x'%
x~$
x}$
x5%
x6%
x/%
x.%
xD%
xE%
x>%
x=%
xb%
xc%
x\%
x[%
xq%
xr%
xk%
xj%
x"&
x#&
xz%
xy%
x1&
x2&
x+&
x*&
x@&
xA&
x:&
x9&
xO&
xP&
xI&
xH&
xC
xR
x;#
bx %
bx 9
x$%
bx $
bx T&
x;
xH
x<
xI
x1#
x2#
xx$
xy$
xV%
xW%
xe%
xf%
xt%
xu%
x%&
x&&
x4&
x5&
xC&
xD&
xW
xX
xf
xg
xu
xv
x&"
x'"
x5"
x6"
xD"
xE"
xS"
xT"
xb"
xc"
xq"
xr"
x"#
x##
x@#
xA#
xO#
xP#
x^#
x_#
xm#
xn#
x|#
x}#
x-$
x.$
x<$
x=$
xK$
xL$
xZ$
x[$
xi$
xj$
x)%
x*%
x8%
x9%
xN%
xG%
xH%
xB
xQ
x`
xo
x~
x/"
x>"
xM"
x\"
xk"
xz"
x+#
x:#
xI#
xX#
xg#
xv#
x'$
x6$
xE$
xT$
xc$
xr$
x#%
x2%
xA%
x_%
xn%
x}%
x.&
x=&
xL&
xA
x@
xG
xP
x_
xn
x}
x."
x="
xL"
x["
xj"
xy"
x*#
x9#
xH#
xW#
xf#
xu#
x&$
x5$
xD$
xS$
xb$
xq$
x"%
x1%
x@%
x^%
xm%
x|%
x-&
x<&
xK&
x(
bx "
bx S&
bx #
bx R&
bx ,
bx 4
bx +
bx 5
x*
x)
bx '
bx 6
bx =
bx L
bx [
bx j
bx y
bx *"
bx 9"
bx H"
bx W"
bx f"
bx u"
bx &#
bx 5#
bx D#
bx S#
bx b#
bx q#
bx "$
bx 1$
bx @$
bx O$
bx ^$
bx m$
bx |$
bx -%
bx <%
bx Z%
bx i%
bx x%
bx )&
bx 8&
bx G&
b101 2
bx 1
bx .
bx 0
bx -
0/
